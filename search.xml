<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python3学习</title>
      <link href="/2024/03/28/python3/"/>
      <url>/2024/03/28/python3/</url>
      
        <content type="html"><![CDATA[<p>相关学习笔记</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="一、常见名词学习"><a href="#一、常见名词学习" class="headerlink" title="一、常见名词学习"></a>一、常见名词学习</h2><h3 id="1-编码"><a href="#1-编码" class="headerlink" title="1.编码"></a>1.编码</h3><p>默认 UTF-8  ，字符串为unicode字符串<br>指定不同编码：</p><h3 id="2-标识符"><a href="#2-标识符" class="headerlink" title="2.标识符"></a>2.标识符</h3><p>以字母或下划线开头，由数字、字母、下划线组成，区分大小写</p><h3 id="3-保留字"><a href="#3-保留字" class="headerlink" title="3.保留字"></a>3.保留字</h3><p>不能用来当标识符的关键字</p><blockquote><blockquote><blockquote><p>import keyword &gt;&gt;&gt; keyword.kwlist<br>[‘False’, ‘None’, ‘True’, ‘<strong>peg_parser</strong>‘, ‘and’, ‘as’, ‘assert’, ‘async’, ‘await’, ‘break’, ‘class’, ‘continue’, <br>‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘nonlocal’,<br> ‘not’, ‘or’, ‘pass’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</p></blockquote></blockquote></blockquote><h3 id="4-注释"><a href="#4-注释" class="headerlink" title="4.注释"></a>4.注释</h3><p>单行注释#开头   #这是单行注释<br>多行注释<br>‘’’<br>这是多行注释<br>‘’’<br>“””<br>三对双引号也是多行注释<br>“””</p><h3 id="5-缩进"><a href="#5-缩进" class="headerlink" title="5.缩进"></a>5.缩进</h3><p>同一个代码块的语句必须包含相同的缩进空格数</p><h3 id="6-标准数据类型"><a href="#6-标准数据类型" class="headerlink" title="6.标准数据类型"></a>6.标准数据类型</h3><p>Number  数字<br>String  字符串   三类不可变数据<br>Tuple  元组</p><h3 id="7-List-列表"><a href="#7-List-列表" class="headerlink" title="7.List  列表"></a>7.List  列表</h3><p>Set  集合    三类可变数据<br>Dictionary  字典<br>可不可变–指的是改变数据时是否会改变变量的引用地址</p><h3 id="8-数据类型的判断可以使用type函数"><a href="#8-数据类型的判断可以使用type函数" class="headerlink" title="8.数据类型的判断可以使用type函数"></a>8.数据类型的判断可以使用type函数</h3><p>格式如下<br>A&#x3D;100<br>Type(A)<br>&lt;type ‘int’&gt;   #判断变量A为整数</p><h3 id="9-常见转义字符"><a href="#9-常见转义字符" class="headerlink" title="9.常见转义字符"></a>9.常见转义字符</h3><p><img src="/img/%E5%9B%BE%E7%89%8725.png" alt="12"></p><h3 id="10-原始字符串"><a href="#10-原始字符串" class="headerlink" title="10.原始字符串"></a>10.原始字符串</h3><p>指字符串里的字符都是原始含义，如反斜杠,不会被看做转义符<br>示例：<br><img src="/img/%E5%9B%BE%E7%89%8726.png" alt="12"><br>#原本应该把整个字符串打印出来，但是\n是换行符号，打印出来使排版出现了问题。<br>这里我们需要使整个字符串变成原始字符串，\n才不会影响布局。<br>存在两种办法<br>1.使用\转义符<br><img src="/img/%E5%9B%BE%E7%89%8727.png" alt="12"><br>2.字符串前添加r  使其变成原始字符串<br><img src="/img/%E5%9B%BE%E7%89%8728.png" alt="12"></p><h3 id="11-索引"><a href="#11-索引" class="headerlink" title="11.索引"></a>11.索引</h3><p>指字符串里每个单独字符的编号  索引从0开始数<br><img src="/img/%E5%9B%BE%E7%89%8729.png" alt="12"></p><h3 id="12-切片"><a href="#12-切片" class="headerlink" title="12.切片"></a>12.切片</h3><p>通过索引得到字符的过程，称为切片<br><img src="/img/%E5%9B%BE%E7%89%8730.png" alt="12"></p><h3 id="13-常用符号"><a href="#13-常用符号" class="headerlink" title="13.常用符号"></a>13.常用符号</h3><ul><li>号拼接字符串<br><img src="/img/%E5%9B%BE%E7%89%8731.png" alt="12"><br>In 判断某个字符串是否在另外一个字符串里<br><img src="/img/%E5%9B%BE%E7%89%8732.png" alt="12"><br>*号 乘法，重复多个字符串<br><img src="/img/%E5%9B%BE%E7%89%8733.png" alt="12"><br>Len()  数字符串一共有多少个字符<br><img src="/img/%E5%9B%BE%E7%89%8734.png" alt="12"></li></ul><h3 id="14-占位符"><a href="#14-占位符" class="headerlink" title="14.占位符"></a>14.占位符</h3><p>在字符串的某些位置预留空位，用来表示空位的字符叫做占位符  如 %s<br><img src="/img/%E5%9B%BE%E7%89%8735.png" alt="12"><br>常见占位符  %s  字符串占位符     %d  十进制数字占位符   %f浮点数占位符<br>占位符全表<br><img src="/img/%E5%9B%BE%E7%89%8736.png" alt="12"><br>多个占位符演示<br><img src="/img/%E5%9B%BE%E7%89%8737.png" alt="12"><br>新型占位符方法<br>使用{}占位，后续内容在format的括号中排列好就行<br><img src="/img/%E5%9B%BE%E7%89%8738.png" alt="12"></p><h3 id="15-Split-将字符串工具某个分割符进行分割"><a href="#15-Split-将字符串工具某个分割符进行分割" class="headerlink" title="15.Split 将字符串工具某个分割符进行分割"></a>15.Split 将字符串工具某个分割符进行分割</h3><p><img src="/img/%E5%9B%BE%E7%89%8739.png" alt="12"><br>.strip()去掉字符串左右两边空格<br>.lstrip()去掉字符串左边的空格<br>.srstrip()去掉字符串右边的空格<br><img src="/img/%E5%9B%BE%E7%89%8740.png" alt="12"></p><h3 id="16-大小写转换"><a href="#16-大小写转换" class="headerlink" title="16.大小写转换"></a>16.大小写转换</h3><p>.upper() 字符串中的字母全大写<br>.lower()  字符串中的字母全部小写<br>.capitalize()  首字母大写<br>.isupper()   判断字符串中的字母是否全部大写<br>.islower()   判断字符串中的字母是否全部小写<br>.intitle()   判断字符串中每个单词的首字母是否大写<br><img src="/img/%E5%9B%BE%E7%89%8741.png" alt="12"></p><h3 id="17-Join拼接字符串"><a href="#17-Join拼接字符串" class="headerlink" title="17.Join拼接字符串"></a>17.Join拼接字符串</h3><p><img src="/img/%E5%9B%BE%E7%89%8742.png" alt="12"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/2024/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p> hexo+github搭建博客</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="一、前期准备（修改hosts、安装软件、建立仓库）"><a href="#一、前期准备（修改hosts、安装软件、建立仓库）" class="headerlink" title="一、前期准备（修改hosts、安装软件、建立仓库）"></a>一、前期准备（修改hosts、安装软件、建立仓库）</h2><h3 id="1-修改hosts-访问github"><a href="#1-修改hosts-访问github" class="headerlink" title="1.修改hosts 访问github"></a>1.修改hosts 访问github</h3><p>进入电脑的hosts所在位置<br>hosts 文件在每个系统的位置不一，详情如下：</p><p>Windows 系统：C:\Windows\System32\drivers\etc\hosts<br>Linux 系统：&#x2F;etc&#x2F;hosts<br>Mac（苹果电脑）系统：&#x2F;etc&#x2F;hosts<br>Android（安卓）系统：&#x2F;system&#x2F;etc&#x2F;hosts<br>iPhone（iOS）系统：&#x2F;etc&#x2F;hosts</p><p>先对原来的hosts文件进行备份，方便回溯回去。<br>由于hosts文件无法直接进行修改保存，需要按照以下方法改写：<br>1.修改hosts文件的备份文件并保存。<br>2.删除原来的hosts文件，把备份文件名称改为hosts  即可完成修改。<br>改写需要把以下内容粘贴到hosts文件的末尾并保存。<br>3.ipconfig &#x2F;flushdns   刷新DNS缓存   然后尝试是否可以正常访问github<br><img src="/img/%E6%96%87%E4%BA%8C%E5%9B%BE%E4%B8%80.png" alt="12"><br><img src="/img/%E6%96%87%E4%BA%8C%E5%9B%BE%E4%BA%8C.png" alt="12"><br><img src="/img/3.png" alt="12"></p><h3 id="2-安装nodejs和git"><a href="#2-安装nodejs和git" class="headerlink" title="2.安装nodejs和git"></a>2.安装nodejs和git</h3><p>安装nodejs ， hexo是基于nodejs驱动的博客框架<br>Nodejs下载地址：<a href="https://nodejs.cn/">https://nodejs.cn</a></p><p>安装git   git是分布式版本控制系统，用于项目控制和管理<br>Git for windows下载地址：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p><h3 id="3-建立项目仓库"><a href="#3-建立项目仓库" class="headerlink" title="3.建立项目仓库"></a>3.建立项目仓库</h3><p>注册github账户，建立项目仓库<br><img src="/img/%E5%9B%BE%E7%89%874.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%875.png" alt="12"></p><h2 id="二、本地部署hexo框架"><a href="#二、本地部署hexo框架" class="headerlink" title="二、本地部署hexo框架"></a>二、本地部署hexo框架</h2><p>新建个文件夹，用来存放博客的相关文件<br>安装hexo<br>打开git bash here</p><pre><div class="caption"><span>npm install -g hexo     #安装hexo</span></div><code class="highlight bash">hexo  init    <span class="comment">#生成基本文件</span>hexo  clean  hexo  g   <span class="comment">#生成静态文件</span>hexo  s    <span class="comment">#本地开启服务  然后就可以访问本地博客  默认为  localhost:4000</span></code></pre><p><img src="/img/%E5%9B%BE%E7%89%876.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%877.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%878.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%879.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8710.png" alt="12"></p><h2 id="三、将hexo上传至Git-hub"><a href="#三、将hexo上传至Git-hub" class="headerlink" title="三、将hexo上传至Git hub"></a>三、将hexo上传至Git hub</h2><h3 id="1-生成sshkey添加至github"><a href="#1-生成sshkey添加至github" class="headerlink" title="1.生成sshkey添加至github"></a>1.生成sshkey添加至github</h3><p>打开cmd或git bash here</p><pre><div class="caption"><span>git config --global user.name "yourname"      #youname为厂库名</span></div><code class="highlight bash">git config --global user.email <span class="string">&quot;youremail&quot;</span>      <span class="comment">#youremail为注册github的邮箱</span></code></pre><p><img src="/img/%E5%9B%BE%E7%89%8711.png" alt="12"><br>进入电脑下 c:user&#x2F;admin   自己用户的家目录下<br><img src="/img/%E5%9B%BE%E7%89%8712.png" alt="12"><br>生成sshkey<br> ssh-keygen -t rsa -C “youemail”   #你的注册github的邮箱<br>三下回车，然后在当前用户目录下会生成.ssh的目录，有公钥和私钥，复制公钥id_rsa.pub的内容<br><img src="/img/%E5%9B%BE%E7%89%8713.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8714.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8715.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8716.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8717.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8718.png" alt="12"></p><h3 id="2-开始部署上传"><a href="#2-开始部署上传" class="headerlink" title="2.开始部署上传"></a>2.开始部署上传</h3><p>修改配置文件，博客目录下的_config.yml<br>在repo这里填上自己前面新建的项目仓库的链接<br><img src="/img/%E5%9B%BE%E7%89%8719.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8720.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8721.png" alt="12"><br>然后在自己的本地博客目录下打开git bash here<br>安装deployer  方便后续上传文件至github</p><pre><div class="caption"><span>npm install hexo-deployer-git --save   #安装deployer</span></div><code class="highlight bash">安装好后hexo  clean  <span class="comment">#清除缓存文件 db.json 和已生成的静态文件 public </span>hexo  g    <span class="comment">#生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写) </span>hexo  d  <span class="comment">#自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span></code></pre><p>然后回到github查看自己的仓库，不再是空空如也，有刚刚上传的博客文件即可。<br>然后使用xxxsxgd.github.io来访问你的博客，xxx是你自己项目仓库取的名字。<br><img src="/img/%E5%9B%BE%E7%89%8722.png" alt="12"><br><img src="/img/%E5%9B%BE%E7%89%8723.png" alt="12"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/12/hello-world/"/>
      <url>/2023/10/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h3><h2 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h2><pre><div class="caption"><span>#黑框代码</span></div><code class="highlight bash">$ hexo new <span class="string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="highlight bash">$ hexo server</code></pre><pre><code class="highlight bash">cs</code></pre><p><img src="/img/touxiang.jpg" alt="cs">    #插入图片</p><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="highlight bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="highlight bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
